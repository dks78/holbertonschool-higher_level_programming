>>> MyList = __import__('1-my_list').MyList

# ðŸ”¹ Test 1 : Liste normale avec des nombres en dÃ©sordre
>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(5)
>>> my_list.append(4)

>>> print(my_list)  # Affiche la liste originale
[3, 1, 2, 5, 4]

>>> my_list.print_sorted()  # Affiche la liste triÃ©e sans la modifier
[1, 2, 3, 4, 5]

>>> print(my_list)  # VÃ©rifie que la liste originale n'a pas changÃ©
[3, 1, 2, 5, 4]

# ðŸ”¹ Test 2 : Liste vide
>>> empty_list = MyList()
>>> print(empty_list)  # VÃ©rifie qu'elle est bien vide
[]

>>> empty_list.print_sorted()  # VÃ©rifie que Ã§a ne plante pas
[]

# ðŸ”¹ Test 3 : Liste dÃ©jÃ  triÃ©e
>>> sorted_list = MyList()
>>> sorted_list.append(1)
>>> sorted_list.append(2)
>>> sorted_list.append(3)
>>> sorted_list.append(4)
>>> sorted_list.append(5)

>>> print(sorted_list)  # Affiche la liste dÃ©jÃ  triÃ©e
[1, 2, 3, 4, 5]

>>> sorted_list.print_sorted()  # VÃ©rifie que Ã§a reste triÃ©
[1, 2, 3, 4, 5]

>>> print(sorted_list)  # VÃ©rifie que la liste originale est intacte
[1, 2, 3, 4, 5]

# ðŸ”¹ Test 4 : Liste avec des doublons
>>> duplicate_list = MyList()
>>> duplicate_list.append(4)
>>> duplicate_list.append(2)
>>> duplicate_list.append(2)
>>> duplicate_list.append(3)
>>> duplicate_list.append(1)

>>> print(duplicate_list)  # Affiche la liste originale
[4, 2, 2, 3, 1]

>>> duplicate_list.print_sorted()  # VÃ©rifie que les doublons sont bien triÃ©s
[1, 2, 2, 3, 4]

>>> print(duplicate_list)  # VÃ©rifie que la liste originale est intacte
[4, 2, 2, 3, 1]

# ðŸ”¹ Test 5 : Liste avec un seul Ã©lÃ©ment
>>> single_list = MyList()
>>> single_list.append(42)

>>> print(single_list)  # Affiche la liste avec un seul Ã©lÃ©ment
[42]

>>> single_list.print_sorted()  # VÃ©rifie que Ã§a ne plante pas
[42]

>>> print(single_list)  # VÃ©rifie que la liste originale n'a pas changÃ©
[42]

# ðŸ”¹ Test 6 : Liste avec des nombres nÃ©gatifs
>>> negative_list = MyList()
>>> negative_list.append(-3)
>>> negative_list.append(-1)
>>> negative_list.append(-2)
>>> negative_list.append(-5)
>>> negative_list.append(-4)

>>> print(negative_list)  # Affiche la liste originale
[-3, -1, -2, -5, -4]

>>> negative_list.print_sorted()  # VÃ©rifie que les nÃ©gatifs sont bien triÃ©s
[-5, -4, -3, -2, -1]

>>> print(negative_list)  # VÃ©rifie que la liste originale n'a pas changÃ©
[-3, -1, -2, -5, -4]

# ðŸ”¹ Test 7 : Liste mixte avec positifs et nÃ©gatifs
>>> mixed_list = MyList()
>>> mixed_list.append(-1)
>>> mixed_list.append(3)
>>> mixed_list.append(-2)
>>> mixed_list.append(0)
>>> mixed_list.append(2)

>>> print(mixed_list)  # Affiche la liste originale
[-1, 3, -2, 0, 2]

>>> mixed_list.print_sorted()  # VÃ©rifie que tout est bien triÃ©
[-2, -1, 0, 2, 3]

>>> print(mixed_list)  # VÃ©rifie que la liste originale est intacte
[-1, 3, -2, 0, 2]

# ðŸ”¹ Test 8 : Liste avec des valeurs identiques
>>> same_value_list = MyList()
>>> same_value_list.append(7)
>>> same_value_list.append(7)
>>> same_value_list.append(7)

>>> print(same_value_list)  # Affiche la liste originale
[7, 7, 7]

>>> same_value_list.print_sorted()  # VÃ©rifie que Ã§a ne change rien
[7, 7, 7]

>>> print(same_value_list)  # VÃ©rifie que la liste originale est intacte
[7, 7, 7]

# ðŸ”¹ Test 9 : Ajout dynamique aprÃ¨s tri
>>> dynamic_list = MyList()
>>> dynamic_list.append(10)
>>> dynamic_list.append(5)

>>> print(dynamic_list)  # Affiche la liste initiale
[10, 5]

>>> dynamic_list.print_sorted()  # Affiche la liste triÃ©e
[5, 10]

>>> dynamic_list.append(7)  # Ajoute un Ã©lÃ©ment aprÃ¨s avoir triÃ©
>>> print(dynamic_list)  # VÃ©rifie que l'Ã©lÃ©ment est bien ajoutÃ©
[10, 5, 7]

>>> dynamic_list.print_sorted()  # VÃ©rifie que le tri fonctionne encore
[5, 7, 10]